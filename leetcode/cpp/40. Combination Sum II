class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
		if (candidates.empty())
			return ans;
		vector<int> combine;
		sort(candidates.begin(), candidates.end());
		solve(candidates, ans, combine, target, 0);
		return ans;
	}
	void solve(vector<int>& candidates, vector<vector<int>>& ans, vector<int> combine, int target, int begin) {
		if (target == 0)
		{
			ans.push_back(combine);
			return;
		}
		else
		{
			for (int i = begin; i < candidates.size() && target >= candidates[i]; i++)
			{
				if (i > begin && candidates[i - 1] == candidates[i])//为避免重复，加入条件i > begin          
					continue;
				combine.push_back(candidates[i]);
				solve(candidates, ans, combine, target - candidates[i], i + 1);
				combine.pop_back();
			}
			return;
		}
    }
};
