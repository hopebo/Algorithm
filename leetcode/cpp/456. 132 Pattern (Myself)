class Solution {
public:
    bool find132pattern(vector<int>& nums) {
        int len = nums.size();
        if (len < 3)
            return false;
        vector<pair<int, int>> range;
        int one = nums[0], two;
        int i = 1;
        while (i < len)
        {
            while (i < len && nums[i] <= one)
            {
                one = nums[i];
                i++;
            }
            if (i < len)
                two = nums[i];
            else
                break;
            while (i < len && nums[i] >= two)
            {
                if (!range.empty() && ifexist(range, nums[i]))
                    return true;
                two = nums[i];
                i++;
            }
            if (i < len)
            {
                if (nums[i] > one)
                    return true;
                range.push_back(pair<int, int>(one, two));
                one = nums[i];
            }
            else
                break;
        }
        return false;
    }
    bool ifexist(vector<pair<int, int>>& range, int num)
    {
        int low = 0, high = range.size()-1;
        while (low < high)
        {
            int mid = (low + high) / 2;
            if (num > range[mid].first)
                high = mid;
            else
                low = mid + 1;
        }
        if (num <= range[low].first)
            return false;
        for (; low < range.size(); low++)
        {
            if (num < range[low].second)
                return true;
        }
        return false;
    }
};
