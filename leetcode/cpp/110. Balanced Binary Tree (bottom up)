//time complexity is O(n)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if (root == NULL)
            return true;
        return DFS_height(root) != -1;
    }
    int DFS_height(TreeNode* root)
    {
        if (root == NULL)
            return 0;
        int left_height = DFS_height(root->left);
        if (left_height == -1)
            return -1;
        int right_height = DFS_height(root->right);
        if (right_height == -1)
            return -1;
        if (abs(left_height-right_height) > 1)
            return -1;
        return max(left_height, right_height)+1;
    }
};
