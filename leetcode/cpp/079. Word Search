class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        if (word.empty())
            return true;
        if (board.empty())
            return false;
        int m = board.size(), n = board[0].size();
        for (int i = 0;i < m;i++)
            for(int j = 0;j < n;j++)
            {
                if(board[i][j] == word[0])
                {
                    board[i][j] = ' ';
                    if (search(board, m, n, i, j, word.substr(1)))
                        return true;
                    board[i][j] = word[0];
                }
            }
        return false;
    }
    bool search(vector<vector<char>>& board, int m, int n, int row, int col, string word)
    {
        if (word.empty())
            return true;
        if (row > 0 && board[row-1][col] == word[0])
        {
            board[row-1][col] = ' ';
            if (search(board, m, n, row-1, col, word.substr(1)))
                return true;
            board[row-1][col] = word[0];
        }
        if (row < m-1 && board[row+1][col] == word[0])
        {
            board[row+1][col] = ' ';
            if (search(board, m, n, row+1, col, word.substr(1)))
                return true;
            board[row+1][col] = word[0];
        }
        if (col > 0 && board[row][col-1] == word[0])
        {
            board[row][col-1] = ' ';
            if (search(board, m, n, row, col-1, word.substr(1)))
                return true;
            board[row][col-1] = word[0];
        }
        if (col < n-1 && board[row][col+1] == word[0])
        {
            board[row][col+1] = ' ';
            if (search(board, m, n, row, col+1, word.substr(1)))
                return true;
            board[row][col+1] = word[0];
        }
        return false;
    }
};
