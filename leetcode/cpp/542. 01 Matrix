class Solution {
public:
    const int maxDist = 10000;
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size(), n = matrix[0].size();
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (matrix[i][j] == 0)
                    continue;
                int top = maxDist-1, left = maxDist-1;
                if (i-1 >= 0)
                    top = min(top, matrix[i-1][j]);
                if (j-1 >= 0)
                    left = min(left, matrix[i][j-1]);
                matrix[i][j] = min(top, left) + 1;
            }
        }    
        for (int i = m-1; i >= 0; i--)
        {
            for (int j = n-1; j >= 0; j--)
            {
                if (matrix[i][j] == 0)
                    continue;
                int down = maxDist-1, right = maxDist-1;
                if (i+1 < m)
                    down = min(down, matrix[i+1][j]);
                if (j+1 < n)
                    right = min(right, matrix[i][j+1]);
                matrix[i][j] = min(matrix[i][j], min(down, right)+1);
            }
        }
        return matrix;
    }
};
