class Solution {
public:
    string solveEquation(string equation) {
        int pos = equation.find_first_of('=');
        string left_s = equation.substr(0, pos), right_s = equation.substr(pos+1);
        pair<int, int> left(parseString(left_s)), right(parseString(right_s));
        if (left.first == right.first)
        {
            return left.second == right.second ? "Infinite solutions" : "No solution";
        }
        else
        {
            int res = (right.second - left.second) / (left.first - right.first);
            return "x=" + to_string(res);
        }
    }
    pair<int, int> parseString(string s) {
        int coef = 0, num = 0;
        int n = 0, sign = 1;
        for (int i = 0; i < s.size(); i++)
        {
            if (s[i] >= '0' && s[i] <= '9')
            {
                n = 10 * n + s[i] - '0';
            }
            else if (s[i] == 'x')
            {
                coef += sign * (n == 0 && (i - 1 < 0 || s[i-1] != '0') ? 1 : n);
                n = 0;
            }
            else if (s[i] == '+' || s[i] == '-')
            {
                num += sign * n;
                sign = s[i] == '+' ? 1 : -1;
                n = 0;
            }
        }
        num += sign * n;
        return pair<int, int>(coef, num);
    }
};
