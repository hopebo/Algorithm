/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if (d == 1)
        {
            TreeNode* p = new TreeNode(v);
            p->left = root;
            return p;
        }
        queue<TreeNode*> node;
        node.push(root);
        while (--d > 1)
        {
            int len = node.size();
            for (int i = 0; i < len; i++)
            {
                TreeNode* p = node.front();
                node.pop();
                if (p->left != NULL)
                    node.push(p->left);
                if (p->right != NULL)
                    node.push(p->right);
            }
        }
        while (!node.empty())
        {
            TreeNode* p = node.front();
            node.pop();
            TreeNode* left = p->left, * right = p->right;
            p->left = new TreeNode(v), p->right = new TreeNode(v);
            p->left->left = left, p->right->right = right;
        }
        return root;
    }
};
