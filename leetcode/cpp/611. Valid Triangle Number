class Solution {
public:
    int triangleNumber(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int res = 0, i = 0, j = 0, k = 0, len = nums.size();
        while (i < len-2)
        {
            while (j < len && nums[j] == nums[i])  j++;
            if (nums[i] != 0)
            {
                k = j-1 > i ? j-1 : j;
                int third = k+1, oneNum = 0, twoNum = 0;
                while (k < len-1)
                {
                    while (third < len && nums[i]+nums[k] > nums[third])    third++;
                    if (k < j)
                        twoNum += third-k-1;
                    else
                        oneNum += third-k-1;
                    k++;
                }
                int n = j-i;
                res += n*oneNum;
                if (n > 1)
                    res += n*(n-1)/2*twoNum;
                if (n > 2)
                    res += n*(n-1)*(n-2)/6;
            }
            i = j;
        }
        return res;
    }
};
