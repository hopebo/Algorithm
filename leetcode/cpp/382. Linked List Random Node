/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
private:
	int len;
	ListNode* begin;
public:
	/** @param head The linked list's head.
	Note that the head is guaranteed to be not null, so it contains at least one node. */
	Solution(ListNode* head) {
		srand((unsigned int)time(NULL));
		begin = head;		
	}

	/** Returns a random node's value. */
	int getRandom() {
		ListNode* p = begin;
		int result, num = 0;
		while (p != NULL)
		{
			if (rand() % (num + 1) == num)
				result = p->val;
			p = p->next;
			num++;
		}
		return result;
	}
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */
