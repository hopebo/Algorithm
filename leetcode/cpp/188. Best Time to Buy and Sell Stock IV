class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        if (prices.size() < 2)
			return 0;
		if (k >= prices.size()/2)
		    return quicksolve(prices);
		vector<int> profit(prices.size(), 0);
		int maxtemp = 0, temp, former;
		for (int i = 1; i < k + 1; i++)
		{
			maxtemp = -prices[0];
			former = profit[0];
			for (int j = 1; j < prices.size(); j++)
			{
				temp = profit[j];
				profit[j] = max(profit[j-1], prices[j] + maxtemp);
				maxtemp = max(maxtemp, former - prices[j]);
				former = temp;
			}
		}
		return profit[prices.size()-1];
    }
    int quicksolve(vector<int>& prices)
    {
        int sum = 0;
        for (int i = 1;i < prices.size();i++)
            if (prices[i] > prices[i-1])
                sum += prices[i] - prices[i-1];
        return sum;
    }
};
