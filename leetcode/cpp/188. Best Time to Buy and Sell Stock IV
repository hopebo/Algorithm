class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        if (prices.size() < 2)
			return 0;
		int len = prices.size(), res = 0;
		if (k >= len / 2)
		{
			res = allprofit(prices);
			return res;
		}
		vector<vector<int>> profit(k + 1, vector<int>(len, 0));
		for (int i = 1; i < k + 1; i++)
		{
			int maxTemp = -prices[0];
			for (int j = 1; j < len; j++)
			{
				profit[i][j] = max(profit[i][j - 1], prices[j] + maxTemp);
				maxTemp = max(maxTemp, profit[i - 1][j - 1] - prices[j]);
			}
		}
		return profit[k][len - 1];
	}
	int allprofit(vector<int>& prices)
	{
		int sum = 0;
		for (int i = 1; i < prices.size(); i++)
		{
			if (prices[i] > prices[i - 1])
				sum += prices[i] - prices[i - 1];
		}
		return sum;
    }
};
