class Solution {
public:
    string largestNumber(vector<int>& nums) {
        string res = "";
		if (nums.empty())
			return res;
		sort(nums.begin(), nums.end(), cmp);
		if (nums[nums.size()-1] == 0)
		{
		    res = "0";
		    return res;
		}
		for (int i = nums.size() - 1; i >= 0; i--)
			res += to_string(nums[i]);
		return res;
	}
	static bool cmp(int a, int b)
	{
		string num1 = to_string(a), num2 = to_string(b);
		int len1 = num1.size(), len2 = num2.size(), i = 0, j = 0;
		while (i < len1 || j < len2)
		{
			char digit1 = num1[0], digit2 = num2[0];
			if (i < len1)
				digit1 = num1[i];
			if (j < len2)
				digit2 = num2[j];
			if (digit1 < digit2)
				return true;
			else if (digit1 > digit2)
				return false;
			else
			{
				i++;
				j++;
			}
		}
		string num;
		if (len1 > len2)
		    num = num2;
		else
		    num = num1;
		i = 0;
		while (i < num.size())
		{
		    if (num[i] > num[0])
		        return num == num1 ? false : true;
		    else if (num[i] < num[0])
		        return num == num1 ? true : false;
		    else
		        i++;
		}
		return false;
    }
};
