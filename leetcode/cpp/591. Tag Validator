class Solution {
public:
    bool isValid(string code) {
        stack<string> preTag;
        for (int i = 0; i < code.size();)
        {
            if (i != 0 && preTag.empty())
                return false;
            if (code.substr(i, 9) == "<![CDATA[")
            {
                int j = code.find("]]>", i+9);
                if (j == string::npos)
                    return false;
                i = j + 3;
            }
            else if (code.substr(i, 2) == "</")
            {
                int j = code.find(">", i+2);
                if (j == string::npos || j-i-2 > 9 || j-i-2 < 1)
                    return false;
                string tag_name = code.substr(i+2, j-i-2);
                for (int k = 0; k < tag_name.size(); k++)
                {
                    if (!isupper(tag_name[k]))
                        return false;
                }
                if (preTag.empty() || preTag.top() != tag_name)
                    return false;
                preTag.pop();
                i = j + 1;
            }
            else if (code.substr(i, 1) == "<")
            {
                int j = code.find(">", i+1);
                if (j == string::npos || j-i-1 > 9 || j-i-1 < 1)
                    return false;
                string tag_name = code.substr(i+1, j-i-1);
                for (int k = 0; k < tag_name.size(); k++)
                {
                    if (!isupper(tag_name[k]))
                        return false;
                }
                preTag.push(tag_name);
                i = j+1;
            }
            else
                i++;
        }
        return preTag.empty();
    }
};
