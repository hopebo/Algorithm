class NumMatrix {
private:
	vector<vector<int> > sum;
public:
	NumMatrix(vector<vector<int>> matrix) {
		if (!matrix.empty())
		{
			int m = matrix.size(), n = matrix[0].size();
			sum.push_back(vector<int>(n + 1, 0));
			for (int i = 0; i < m; i++)
			{
				sum.push_back(vector<int>(n + 1, 0));
				int sum_row = 0;
				for (int j = 0; j < n; j++)
				{
					sum_row += matrix[i][j];
					sum[i + 1][j + 1] = sum[i][j + 1] + sum_row;
				}
			}
		}
	}

	int sumRegion(int row1, int col1, int row2, int col2) {
		if (!sum.empty())
			return sum[row2 + 1][col2 + 1] - sum[row1][col2 + 1] - sum[row2 + 1][col1] + sum[row1][col1];
		else
			return -1;
	}
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * int param_1 = obj.sumRegion(row1,col1,row2,col2);
 */
