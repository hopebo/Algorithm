class Solution {
public:
    int totalNQueens(int n) {
        int ans = 0;
        vector<int> column(n,0);
        vector<int> bias45(2*n-1,0);
        vector<int> bias135(2*n-1,0);
        solveNQueens(ans, column, bias45, bias135, 0, n);
        return ans;
    }
    void solveNQueens(int& ans, vector<int>& column, vector<int>& bias45, vector<int>& bias135, int row, int& n)
    {
        if (row == n)
        {
            ans++;
            return;
        }
        for(int col = 0; col < n; col++)
        {
            if(column[col] || bias45[row+col] || bias135[n-1-col+row])
                continue;
            column[col] = bias45[row+col] = bias135[n-1-col+row] = 1;
            solveNQueens(ans, column, bias45, bias135, row+1, n);
            column[col] = bias45[row+col] = bias135[n-1-col+row] = 0;
        }
        return;
    }
};
