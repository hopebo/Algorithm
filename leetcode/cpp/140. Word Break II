class Solution {
private:
	set<string> worddict;
	map<int, vector<string>> partion;
public:
	vector<string> wordBreak(string s, vector<string>& wordDict) {
		if (s.empty())
			return vector<string>();
		for (int i = 0; i < wordDict.size(); i++)
			worddict.insert(wordDict[i]);
		vector<string> res = solve(s);
		return res;		
	}
	vector<string> solve(string s)
	{
		int len = s.size();
		vector<string> res;
		if (partion.count(len - 1))
			return partion[len - 1];
		if (worddict.count(s))
			res.push_back(s);
		for (int i = 1; i < len; i++)
		{
			if (worddict.count(s.substr(i)))
			{
				vector<string> temp = combine(solve(s.substr(0, i)), s.substr(i));
				res.insert(res.end(), temp.begin(), temp.end());
			}
		}
		partion[len-1] = res;
		return res;		
	}
	vector<string> combine(vector<string> vec, string word)
	{
		for (int i = 0; i < vec.size(); i++)
		{
			vec[i] += " " + word;
		}
		return vec;
	}
};
