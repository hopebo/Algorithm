class Solution {
public:
    bool isSelfCrossing(vector<int>& x) {
        if (x.size() < 4)
			return false;
		vector<int> path(2, 0);
		path.insert(path.end(), x.begin(), x.end());
		for (int i = 4; i < path.size(); i++)
		{
			if (path[i] < path[i - 2] - path[i - 4])
				return ifdecrease(path, i + 1);
			else
			{
				if (path[i - 3] != 0 && path[i - 1] <= path[i - 3])
					return true;
			}
		}
		return false;
	}
	bool ifdecrease(vector<int>& path, int begin)
	{
		for (int i = begin; i < path.size(); i++)
		{
			if (path[i] >= path[i - 2])
				return true;
		}
		return false;
    }
};
