class Solution {
public:
    vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {
        set<string> dic(words.begin(), words.end());
        map<string, bool> ifcancat;
        vector<string> res;
        for (int i = 0; i < words.size(); i++)
            if (judge(dic, ifcancat, words[i]))
                res.push_back(words[i]);
        return res;
    }
    bool judge(set<string>& dic, map<string, bool>& ifcancat, string word) {
        if (ifcancat.count(word))
            return ifcancat[word];
        for (int len = 1; len < word.size(); len++)
        {
            string prefix = word.substr(0, len);
            string suffix = word.substr(len);
            if (dic.count(prefix))
            {
                if (dic.count(suffix) || judge(dic, ifcancat, suffix))
                {
                    ifcancat[word] = true;
                    return ifcancat[word];
                }
            }
        }
        ifcancat[word] = false;
        return ifcancat[word];
    }
};
