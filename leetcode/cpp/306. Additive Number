class Solution {
public:
    bool isAdditiveNumber(string num) {
        if (num.size() < 3)
			return false;
		int len = num.size();
		string first, second;
		for (int i = 0; i <= len - 3; i++)
		{
			if (num[0] == '0' && i > 0)
				break;
			first = num.substr(0, i + 1);
			for (int j = i + 1; j <= len - 2; j++)
			{
				if (num[i + 1] == '0' && j > i+1)
					break;
				second = num.substr(i + 1, j - i);
				int next = j + 1;
				bool flag = true;
				string former = first, latter = second;
				while (next < len)
				{
					string result = add(former, latter);
					int res_len = result.size();
					if (result != num.substr(next, res_len))
					{
						flag = false;
						break;
					}
					former = latter;
					latter = result;
					next = res_len + next;
				}
				if (flag)
					return true;
			}
		}
		return false;
	}
	string add(string a, string b)
	{
		if (a.size() < b.size())
			swap(a, b);
		int len1 = a.size(), len2 = b.size(), flag = 0, i = 0;
		for (; i < len2; i++)
		{
			int num = int(b[len2 - 1 - i] - '0') + int(a[len1 - 1 - i] - '0') + flag;
			flag = num / 10;
			a[len1 - 1 - i] = char(num % 10 + '0');
		}
		while (flag != 0 && i < len1)
		{
			int num = int(a[len1 - 1 - i] - '0') + flag;
			flag = num / 10;
			a[len1 - 1 - i] = char(num % 10 + '0');
			i++;
		}
		if (flag != 0)
			a = to_string(flag) + a;
		return a;
	}
};
