class Solution {
public:
    string smallestGoodBase(string n) {
        long long num = stoll(n);
        int maxLength = ceil(log2(num));
        for (int len = maxLength; len >= 2; len--)
        {
            long long res = solve(len, num);
            if (res != 0)
                 return to_string(res);
        }
        return to_string(num-1);
    }
    long long solve(int length, long long num)
    {
        long long left = 2, right = pow(num, 1.0/(length-1));
        while (left <= right)
        {
            long long mid = (left + right) / 2;
            long long sum = 0, add = 1;
            for (int i = 0; i < length; i++)
            {
                sum += add;
                add *= mid;
            }
            if (sum == num)
                return mid;
            else if (sum > num)
                right = mid - 1;
            else
                left = mid + 1;
        }
        return 0;
    }
};
