class Solution {
public:
    int candy(vector<int>& ratings) {
        if (ratings.empty())
			return 0;
		int sum = 0, start = -1, N = ratings.size();
		vector<int> num_candy(N, 0);
		for (int i = 1; i < N; i++)
		{
			if (ratings[i] < ratings[i - 1])
			{
				if (num_candy[i - 1] == 0)
				{
					start = i - 1;
					num_candy[i] = -1;
				}
				else if (num_candy[i - 1] > 0)
					num_candy[i] = 0;
				else
					num_candy[i] = num_candy[i-1] - 1;
			}
			else if (ratings[i] > ratings[i - 1])
			{
				if (num_candy[i - 1] < 0)
				{
					int num = abs(num_candy[i - 1]);
					sum += num*(i - start);
					if (start >= 1 && ratings[start - 1] > ratings[start] && num_candy[start - 1] <= num)
						sum += num + 1 - num_candy[start - 1];
					num_candy[i] = 1;
				}
				else if (num_candy[i - 1] >= 0)
					num_candy[i] = num_candy[i - 1] + 1;
			}
			else
			{
				if (num_candy[i - 1] <= 0)
					num_candy[i] = num_candy[i - 1];
				else if (num_candy[i - 1] > 0)
					num_candy[i] = 0;
			}
			sum += num_candy[i];
		}
		if (num_candy[N - 1] < 0)
		{
			int num = abs(num_candy[N - 1]);
			sum += num*(N - start);
			if (start >= 1 && ratings[start - 1] > ratings[start] && num_candy[start - 1] <= num)
				sum += num + 1 - num_candy[start - 1];
		}
		sum += N;
		return sum;
    }
};
