class RandomizedSet {
private:
	map<int, int> container;
	vector<int> nums;
public:
	/** Initialize your data structure here. */
	RandomizedSet() {
		srand((unsigned int)time(NULL));
	}

	/** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
	bool insert(int val) {
		if (container.count(val))
			return false;
		else
		{
			container[val] = nums.size();
			nums.push_back(val);
			return true;
		}
	}

	/** Removes a value from the set. Returns true if the set contained the specified element. */
	bool remove(int val) {
		if (container.count(val))
		{
			int site = container[val];
			if (site != nums.size() - 1)
			{
				container[nums.back()] = site;
				nums[site] = nums.back();				
			}
			container.erase(val);
			nums.pop_back();
			return true;
		}
		else
			return false;
	}

	/** Get a random element from the set. */
	int getRandom() {
		int index = rand() % nums.size();
		return nums[index];
	}
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * bool param_1 = obj.insert(val);
 * bool param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */
