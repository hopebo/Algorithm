/**
 * Definition for singly-linked list with a random pointer.
 * struct RandomListNode {
 *     int label;
 *     RandomListNode *next, *random;
 *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}
 * };
 */
class Solution {
public:
    RandomListNode *copyRandomList(RandomListNode *head) {
        if (head == NULL)
			return NULL;
		RandomListNode *work = head, *next;
		while (work != NULL)
		{
			next = work->next;
			RandomListNode *p = new RandomListNode(work->label);
			work->next = p;
			p->next = next;
			work = next;
		}
		work = head;
		while (work != NULL)
		{
			if (work->random != NULL)
			{
				work->next->random = work->random->next;
			}
			work = work->next->next;
		}
		work = head;
		RandomListNode *res = work->next, *p = res;
		while (work != NULL)
		{
			
				work->next = p->next;
				work = work->next;
				if (work == NULL)
					continue;
				p->next = work->next;
				p = p->next;
		}
		return res;
    }
};
