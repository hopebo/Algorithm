/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        if (inorder.empty())
            return NULL;
        TreeNode* root = build(inorder, postorder, 0, inorder.size()-1, 0, postorder.size()-1);
        return root;
    }
    TreeNode* build(vector<int>& inorder, vector<int>& postorder, int start_in, int end_in, int start_post, int end_post)
    {
        if (start_in > end_in)
            return NULL;
        int num = 0;
        for(;num <= end_in - start_in;num++)
        {
            if (inorder[start_in+num] == postorder[end_post])
                break;
        }
        TreeNode* p = new TreeNode(postorder[end_post]);
        p->left = build(inorder, postorder, start_in, start_in+num-1, start_post, start_post+num-1);
        p->right = build(inorder, postorder, start_in+num+1, end_in, start_post+num, end_post-1);
        return p;
    }
};
