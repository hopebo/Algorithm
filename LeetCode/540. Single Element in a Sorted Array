class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int low = 0, high = nums.size()-1;
        while (low <= high)
        {
            int mid = (low + high) / 2;
            int index = mid;
            if ((mid-1 < 0 || nums[mid-1] != nums[mid]) && (mid+1 >= nums.size() || nums[mid+1] != nums[mid]))
                return nums[mid];
            else if (mid+1 < nums.size() && nums[mid+1] == nums[mid])
                index++;
            if (index % 2)
                low = index + 1;
            else
                high = index - 2;
        }
        return -1;
    }
};
