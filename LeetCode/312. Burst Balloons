class Solution {
public:
    int maxCoins(vector<int>& nums) {
        if (nums.empty())
			return 0;
		int size = nums.size();
		vector<vector<int>> dp(size, vector<int>(size, INT_MIN));
		for (int len = 1; len <= size; len++)
			for (int start = 0; start <= size-len; start++)
				for (int i = start; i <= start + len - 1; i++)
				{
					int left = start - 1 < 0 ? 1 : nums[start - 1];
					int right = start + len > size - 1 ? 1 : nums[start + len];
					int dp_left = start <= i - 1 ? dp[start][i - 1] : 0;
					int dp_right = i + 1 <= start + len - 1 ? dp[i + 1][start + len - 1] : 0;
					dp[start][start + len - 1] = max(dp[start][start + len - 1], left * nums[i] * right + dp_left + dp_right);
				}
		return dp[0][size - 1];
    }
};
