class Solution {
private:
	struct node {
		node *left, *right;
		int val, dup, sum;
		node(int a) {
			val = a;
			dup = 1;
			sum = 0;
			left = NULL;
			right = NULL;
		}
	};
public:
	vector<int> countSmaller(vector<int>& nums) {
		if (nums.empty())
			return vector<int>();
		vector<int> count(nums.size(), 0);
		node *root = NULL;
		for (int i = nums.size() - 1; i >= 0; i--)
			insert(nums[i], root, count[i]);
		return count;
	}

	void insert(int num, node* & root, int& sum)
	{
		if (root == NULL)
			root = new node(num);
		else if (num == root->val)
		{
			root->dup++;
			sum += root->sum;
		}
		else if (num < root->val)
		{
			root->sum++;
			insert(num, root->left, sum);
		}
		else
		{
			sum += root->dup + root->sum;
			insert(num, root->right, sum);
		}
		return;
	}
};
