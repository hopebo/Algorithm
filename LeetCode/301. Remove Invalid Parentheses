class Solution {
public:
    vector<string> removeInvalidParentheses(string s) {
        vector<string> res;
		char character[2] = { '(', ')' };
		solve(res, s, 0, 0, character);
		return res;
	}
	void solve(vector<string>& res, string s, int start_i, int start_j, char character[])
	{
		int stack = 0;
		for (int i = start_i; i < s.size(); i++)
		{
			if (s[i] == character[0])
				stack++;
			else if (s[i] == character[1])
				stack--;
			if (stack >= 0)
				continue;
			for (int j = start_j; j <= i; j++)
			{
				if (s[j] == character[1] && (j == start_j || s[j] != s[j - 1]))
					solve(res, s.substr(0, j) + s.substr(j + 1), i, j, character);
			}
			return;
		}
		reverse(s.begin(), s.end());
		if (character[0] == '(')
		{
			char rev[2] = { ')','(' };
			solve(res, s, 0, 0, rev);
		}
		else
			res.push_back(s);
		return;
    }
};
