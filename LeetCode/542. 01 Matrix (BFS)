class Solution {
public:
    const int maxDist = 10000;
    int move[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size(), n = matrix[0].size();
        queue<pair<int, int>> point;
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (matrix[i][j] == 0)
                    point.push(pair<int, int>(i, j));
                else
                    matrix[i][j] = maxDist;
            }
        }    
        while (!point.empty()) {
            int i = point.front().first, j = point.front().second;
            point.pop();
            for (int k = 0; k < 4; k++)
            {
                int row = i + move[k][0], col = j + move[k][1];
                if (row < 0 || row >= m || col < 0 || col >= n || matrix[row][col] <= matrix[i][j] + 1)
                    continue;
                matrix[row][col] = matrix[i][j] + 1;
                point.push(pair<int, int>(row, col));
            }
        }
        return matrix;
    }
};
