class Solution {
public:
    string fractionAddition(string expression) {
        int common = 5 * 7 * 8 * 9, sumNumerator = 0, sign = 1, i = 0;
        if (expression[0] == '-')
        {
            sign = -1;
            i++;
        }
        do {
            int numerator = 0, denominator = 0;
            while (i < expression.size() && expression[i] >= '0' && expression[i] <= '9') {
                numerator = 10*numerator + expression[i++] - '0';
            }
            i++;
            while (i < expression.size() && expression[i] >= '0' && expression[i] <= '9') {
                denominator = 10*denominator + expression[i++] - '0';
            }
            sumNumerator += common / denominator * numerator * sign;
            if (i < expression.size())
                sign = expression[i++] == '+' ? 1 : -1;
        } while (i < expression.size());
        int divisor = calCommonDivisor(abs(sumNumerator), common);
        sumNumerator /= divisor;
        common /= divisor;
        return to_string(sumNumerator) + "/" + to_string(common);
    }
    int calCommonDivisor(int a, int b) {
        if (a == 0)
            return b;
        if (a < b)
            swap(a, b);
        while (a % b)
        {
            int temp = a % b;
            a = b;
            b = temp;
        }
        return b;
    }
};
