/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    ListNode* node;
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if (head == NULL)
            return NULL;
        node = head;
        int size = 0;
        while (head != NULL)
        {
            head = head->next;
            size++;
        }
        return build(0, size-1);
    }
    TreeNode* build(int begin, int end)
    {
        if (begin > end)
            return NULL;
        int root = ceil((begin+end)/2);
        TreeNode* left = build(begin, root-1);
        TreeNode* p = new TreeNode(node->val);
        p->left = left;
        node = node->next;
        p->right = build(root+1, end);
        return p;
    }
};
