//time complexity is O(n^2)
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if (root == NULL)
            return true;
        return abs(NumOfLayer(root->left)-NumOfLayer(root->right)) <= 1 && isBalanced(root->left) && isBalanced(root->right);
    }
    int NumOfLayer(TreeNode* root)
    {
        if (root == NULL)
            return 0;
        return max(NumOfLayer(root->left), NumOfLayer(root->right))+1;
    }
};
