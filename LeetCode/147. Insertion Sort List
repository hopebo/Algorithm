/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) {
        if (head == NULL)
			return NULL;
		ListNode temp(INT_MIN);
		temp.next = head;
		ListNode *prev = head, *work = head->next;
		while (work != NULL)
		{
			ListNode *p = &temp;
			while (p->next != work && p->next->val < work->val)
				p = p->next;
			if (p->next != work)
			{
				ListNode *temp = work->next;
				work->next = p->next;
				p->next = work;
				work = temp;
				prev->next = work;
			}
			else
			{
				prev = work;
				work = work->next;
			}
		}
		return temp.next;
    }
};
