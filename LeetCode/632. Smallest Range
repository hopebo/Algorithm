class Solution {
public:
    vector<int> smallestRange(vector<vector<int>>& nums) {
        int K = nums.size(), upper = INT_MIN;
        vector<int> index(K, 0);
        vector<int> res(2, 0);
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        for (int i = 0; i < K; i++)
        {
            pq.push(pair<int, int>(nums[i][0], i));
            upper = max(upper, nums[i][0]);
        }
        res[0] = pq.top().first, res[1] = upper;
        int i = pq.top().second;
        pq.pop();
        while (++index[i] < nums[i].size())
        {
            upper = max(upper, nums[i][index[i]]);
            pq.push(pair<int, int>(nums[i][index[i]], i));
            if (upper - pq.top().first < res[1] - res[0])
            {
                res[1] = upper;
                res[0] = pq.top().first;
            }
            i = pq.top().second;
            pq.pop();
            while (index[i] + 1 < nums[i].size() && nums[i][index[i]] == nums[i][index[i] + 1])
                index[i]++;
        }
        return res;
    }
};
