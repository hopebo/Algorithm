class Solution {
public:
    string shortestPalindrome(string s) {
        if (s.size() < 2)
			return s;
		string rev = s;
		reverse(rev.begin(), rev.end());
		string l = s + "#" + rev;
		vector<int> next(l.size() + 1, 0);	//存储的是长度为i的子串中，最长相同的前缀与后缀字符串的长度
		next[0] = next[1] = 0;
		int j = next[1];
		for (int i = 1; i < l.size(); i++)	//i表示字符串的下标，从1开始，对应的长度为2
		{
			while (j > 0 && l[i] != l[j])
				j = next[j];
			if (l[i] == l[j])
				j++;
			next[i + 1] = j;
		}
		return rev.substr(0, s.size() - next[l.size()]) + s;
	}
};
