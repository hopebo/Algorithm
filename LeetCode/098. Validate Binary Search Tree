/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        if (root == NULL)
			return true;
		TreeNode* p = root;
		vector<TreeNode*> p_stack;
		int former = INT_MIN, latter;
		bool flag = true;
		while (p != NULL || !p_stack.empty())
		{
			while (p != NULL)
			{
				p_stack.push_back(p);
				p = p->left;
			}
			if (!p_stack.empty())
			{
				p = p_stack.back();
				latter = p->val;
				if (!flag)
				{
					if (latter <= former)
						return false;
				}
				else
					flag = false;
				former = latter;
				p_stack.pop_back();
			}
			p = p->right;
		}
		return true;
    }
};
