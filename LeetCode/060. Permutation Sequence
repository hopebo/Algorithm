class Solution {
public:
    string getPermutation(int n, int k) {
        string ans;
        if (n == 0)
            return ans;
        else if (n == 1)
        {
            ans.push_back('1');
            return ans;
        }
        int part = 1;
        map<int,int> numbers;
        for(int i = 1;i < n;i++)
        {
            part *= i;
            numbers[i] = 0;
        }
        numbers[n] = 0;
        k--;
        for(int i = 1;i <= n;i++)
        {
            ans.push_back(select(numbers,k/part));
            k = k%part;
            if (i < n)
                part /= (n-i);
        }
        return ans;
    }
    char select(map<int,int>& numbers,int site)
    {
        int j = 0;
        for(int i = 0;i <= site;i++)
        {
            j++;
            while(numbers[j] == 1)   j++;
        }
        numbers[j] = 1;
        return '1'+(j-1);
    }
};
