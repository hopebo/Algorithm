class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        if (grid.empty())
			return 0;
		int num = 0, row = grid.size(), column = grid[0].size();
		for (int i = 0; i < row; i++)
		{
			for (int j = 0; j < column; j++)
			{
				if (grid[i][j] == '1')
				{
					num++;
					wipe(grid, i, j, row, column);
				}
			}
		}
		for (int i = 0; i < row; i++)
		{
			for (int j = 0; j < column; j++)
			{
				if (grid[i][j] == '2')
				{
					grid[i][j] = '1';
				}
			}
		}
		return num;
	}
	void wipe(vector<vector<char>>& grid, int x, int y, int row, int column)
	{
		grid[x][y] = '2';
		if (y + 1 < column && grid[x][y+1] == '1')
			wipe(grid, x, y + 1, row, column);
		if (x + 1 < row && grid[x + 1][y] == '1')
			wipe(grid, x + 1, y, row, column);
		if (y - 1 >= 0 && grid[x][y - 1] == '1')
			wipe(grid, x, y - 1, row, column);
		if (x - 1 >= 0 && grid[x - 1][y] == '1')
			wipe(grid, x - 1, y, row, column);
		return;
    }
};
