/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> findMode(TreeNode* root) {
        vector<int> res;
        if (root == NULL)
            return res;
        int count = 0, maxFreq = 0, prev = INT_MAX;
        inorder(root, res, count, maxFreq, prev);
        return res;
    }
    void inorder(TreeNode* root, vector<int>& res, int& count, int& maxFreq, int& prev) {
        if (root == NULL)
            return;
        inorder(root->left, res, count, maxFreq, prev);
        if (root->val == prev)
            count++;
        else
            count = 1;
        if (count > maxFreq)
        {
            maxFreq = count;
            res.clear();
            res.push_back(root->val);
        }
        else if (count == maxFreq)
            res.push_back(root->val);
        prev = root->val;
        inorder(root->right, res, count, maxFreq, prev);
        return;
    }
};
