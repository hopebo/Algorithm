/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
        if (root == NULL)
            return res;
        queue<TreeNode*> node;
        node.push(root);
        while(!node.empty())
        {
            vector<int> ans;
            int len = node.size();
            for (int i = 0;i < len;i++)
            {
                TreeNode* p = node.front();
                ans.push_back(p->val);
                if (p->left != NULL)
                    node.push(p->left);
                if (p->right != NULL)
                    node.push(p->right);
                node.pop();
            }
            res.push_back(ans);
        }
        vector<vector<int>> result;
        for (int i = res.size()-1;i >= 0;i--)
        {
            result.push_back(res[i]);
        }
        return result;
    }
};
