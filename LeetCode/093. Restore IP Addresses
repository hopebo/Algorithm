class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
        vector<string> res;
        string ans;
        solve(res, s, ans, 0);
        return res;
    }
    void solve(vector<string> &res, string s, string ans, int level)
    {
        if (level >= 4 && s.empty())
        {
            res.push_back(ans);
            return;
        }
        if (level < 4 && s.empty() || level >= 4 && !s.empty())
            return;
        string temp = ans;
        temp.push_back(s[0]);
        if (level <= 2)
            temp.push_back('.');
        solve(res, s.substr(1), temp, level+1);
        if (s.size() >= 2 && atoi(s.substr(0,2).c_str()) >= 10)
        {
            temp = ans;
            temp += s.substr(0,2);
            if (level <= 2)
                temp.push_back('.');
            solve(res, s.substr(2), temp, level+1);
        }
        if (s.size() >= 3 && atoi(s.substr(0,3).c_str()) >= 100 && atoi(s.substr(0,3).c_str()) <= 255)
        {
            temp = ans;
            temp += s.substr(0,3);
            if (level <= 2)
                temp.push_back('.');
            solve(res, s.substr(3), temp, level+1);
        }
        return;
    }
};
